{"ast":null,"code":"var _jsxFileName = \"/home/omega/coursera/frontend/src/components/ProtectedRoute.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\n\n// Component to protect routes that require authentication\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProtectedRoute = () => {\n  _s();\n  const {\n    currentUser,\n    loading\n  } = useContext(AuthContext);\n\n  // Show loading state while checking authentication\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Redirect to login if not authenticated\n  if (!currentUser) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render the protected content\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n};\n\n// Component to protect routes that require admin privileges\n_s(ProtectedRoute, \"CjcgYKvE1fHrpIpZCZsawF61wbc=\");\n_c = ProtectedRoute;\nexport const AdminRoute = () => {\n  _s2();\n  const {\n    currentUser,\n    loading,\n    isAdmin\n  } = useContext(AuthContext);\n\n  // Show loading state while checking authentication\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Redirect to login if not authenticated\n  if (!currentUser) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Redirect to home if authenticated but not admin\n  if (!isAdmin()) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render the admin content\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n};\n_s2(AdminRoute, \"dUAXYuF9BYiY7b9lgR8gr3FOaXU=\");\n_c2 = AdminRoute;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"AdminRoute\");","map":{"version":3,"names":["React","useContext","Navigate","Outlet","AuthContext","jsxDEV","_jsxDEV","ProtectedRoute","_s","currentUser","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","AdminRoute","_s2","isAdmin","_c2","$RefreshReg$"],"sources":["/home/omega/coursera/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\n\n// Component to protect routes that require authentication\nexport const ProtectedRoute = () => {\n  const { currentUser, loading } = useContext(AuthContext);\n  \n  // Show loading state while checking authentication\n  if (loading) {\n    return <div>Cargando...</div>;\n  }\n  \n  // Redirect to login if not authenticated\n  if (!currentUser) {\n    return <Navigate to=\"/login\" replace />;\n  }\n  \n  // Render the protected content\n  return <Outlet />;\n};\n\n// Component to protect routes that require admin privileges\nexport const AdminRoute = () => {\n  const { currentUser, loading, isAdmin } = useContext(AuthContext);\n  \n  // Show loading state while checking authentication\n  if (loading) {\n    return <div>Cargando...</div>;\n  }\n  \n  // Redirect to login if not authenticated\n  if (!currentUser) {\n    return <Navigate to=\"/login\" replace />;\n  }\n  \n  // Redirect to home if authenticated but not admin\n  if (!isAdmin()) {\n    return <Navigate to=\"/\" replace />;\n  }\n  \n  // Render the admin content\n  return <Outlet />;\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,SAASC,WAAW,QAAQ,wBAAwB;;AAEpD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM;IAAEC,WAAW;IAAEC;EAAQ,CAAC,GAAGT,UAAU,CAACG,WAAW,CAAC;;EAExD;EACA,IAAIM,OAAO,EAAE;IACX,oBAAOJ,OAAA;MAAAK,QAAA,EAAK;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC/B;;EAEA;EACA,IAAI,CAACN,WAAW,EAAE;IAChB,oBAAOH,OAAA,CAACJ,QAAQ;MAACc,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,oBAAOT,OAAA,CAACH,MAAM;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB,CAAC;;AAED;AAAAP,EAAA,CAjBaD,cAAc;AAAAW,EAAA,GAAdX,cAAc;AAkB3B,OAAO,MAAMY,UAAU,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC9B,MAAM;IAAEX,WAAW;IAAEC,OAAO;IAAEW;EAAQ,CAAC,GAAGpB,UAAU,CAACG,WAAW,CAAC;;EAEjE;EACA,IAAIM,OAAO,EAAE;IACX,oBAAOJ,OAAA;MAAAK,QAAA,EAAK;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC/B;;EAEA;EACA,IAAI,CAACN,WAAW,EAAE;IAChB,oBAAOH,OAAA,CAACJ,QAAQ;MAACc,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,IAAI,CAACM,OAAO,CAAC,CAAC,EAAE;IACd,oBAAOf,OAAA,CAACJ,QAAQ;MAACc,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;;EAEA;EACA,oBAAOT,OAAA,CAACH,MAAM;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB,CAAC;AAACK,GAAA,CApBWD,UAAU;AAAAG,GAAA,GAAVH,UAAU;AAAA,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}