{"ast":null,"code":"import axios from 'axios';\n\n// Create an axios instance with default config\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5002',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// API functions for different endpoints\nexport const ApiService = {\n  // Health check\n  checkHealth: async () => {\n    try {\n      const response = await api.get('/health');\n      return response.data;\n    } catch (error) {\n      console.error('Error checking API health:', error);\n      throw error;\n    }\n  },\n  // Get API status\n  getApiStatus: async () => {\n    try {\n      const response = await api.get('/');\n      return response.data;\n    } catch (error) {\n      console.error('Error getting API status:', error);\n      throw error;\n    }\n  },\n  // Fichas Médicas\n  getAllFichas: async () => {\n    try {\n      const response = await api.get('/api/fichas');\n      return response.data.fichas;\n    } catch (error) {\n      console.error('Error getting fichas médicas:', error);\n      throw error;\n    }\n  },\n  getFichaById: async fichaId => {\n    try {\n      const response = await api.get(`/api/fichas/${fichaId}`);\n      return response.data.ficha;\n    } catch (error) {\n      console.error(`Error getting ficha médica ${fichaId}:`, error);\n      throw error;\n    }\n  },\n  createFicha: async fichaData => {\n    try {\n      const response = await api.post('/api/fichas', fichaData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating ficha médica:', error);\n      throw error;\n    }\n  },\n  updateFicha: async (fichaId, fichaData) => {\n    try {\n      const response = await api.put(`/api/fichas/${fichaId}`, fichaData);\n      return response.data;\n    } catch (error) {\n      console.error(`Error updating ficha médica ${fichaId}:`, error);\n      throw error;\n    }\n  },\n  deleteFicha: async (fichaId, apiKey) => {\n    try {\n      const response = await api.delete(`/api/fichas/${fichaId}`, {\n        headers: {\n          'X-API-Key': apiKey\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error(`Error deleting ficha médica ${fichaId}:`, error);\n      throw error;\n    }\n  },\n  searchFichas: async params => {\n    try {\n      const response = await api.get('/api/buscar/fichas', {\n        params\n      });\n      return response.data.fichas;\n    } catch (error) {\n      console.error('Error searching fichas médicas:', error);\n      throw error;\n    }\n  },\n  getQRCode: async fichaId => {\n    try {\n      // Esta URL devuelve directamente la imagen del QR\n      return `${api.defaults.baseURL}/api/qr/${fichaId}`;\n    } catch (error) {\n      console.error(`Error getting QR code for ficha ${fichaId}:`, error);\n      throw error;\n    }\n  },\n  uploadPhoto: async (fichaId, photoFile) => {\n    try {\n      const formData = new FormData();\n      formData.append('file', photoFile);\n      const response = await axios.post(`${api.defaults.baseURL}/api/upload_photo/${fichaId}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error(`Error uploading photo for ficha ${fichaId}:`, error);\n      throw error;\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","ApiService","checkHealth","response","get","data","error","console","getApiStatus","getAllFichas","fichas","getFichaById","fichaId","ficha","createFicha","fichaData","post","updateFicha","put","deleteFicha","apiKey","delete","searchFichas","params","getQRCode","defaults","uploadPhoto","photoFile","formData","FormData","append"],"sources":["/home/omega/coursera/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create an axios instance with default config\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5002',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// API functions for different endpoints\nexport const ApiService = {\n  // Health check\n  checkHealth: async () => {\n    try {\n      const response = await api.get('/health');\n      return response.data;\n    } catch (error) {\n      console.error('Error checking API health:', error);\n      throw error;\n    }\n  },\n\n  // Get API status\n  getApiStatus: async () => {\n    try {\n      const response = await api.get('/');\n      return response.data;\n    } catch (error) {\n      console.error('Error getting API status:', error);\n      throw error;\n    }\n  },\n\n  // Fichas Médicas\n  getAllFichas: async () => {\n    try {\n      const response = await api.get('/api/fichas');\n      return response.data.fichas;\n    } catch (error) {\n      console.error('Error getting fichas médicas:', error);\n      throw error;\n    }\n  },\n\n  getFichaById: async (fichaId) => {\n    try {\n      const response = await api.get(`/api/fichas/${fichaId}`);\n      return response.data.ficha;\n    } catch (error) {\n      console.error(`Error getting ficha médica ${fichaId}:`, error);\n      throw error;\n    }\n  },\n\n  createFicha: async (fichaData) => {\n    try {\n      const response = await api.post('/api/fichas', fichaData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating ficha médica:', error);\n      throw error;\n    }\n  },\n\n  updateFicha: async (fichaId, fichaData) => {\n    try {\n      const response = await api.put(`/api/fichas/${fichaId}`, fichaData);\n      return response.data;\n    } catch (error) {\n      console.error(`Error updating ficha médica ${fichaId}:`, error);\n      throw error;\n    }\n  },\n\n  deleteFicha: async (fichaId, apiKey) => {\n    try {\n      const response = await api.delete(`/api/fichas/${fichaId}`, {\n        headers: {\n          'X-API-Key': apiKey\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error(`Error deleting ficha médica ${fichaId}:`, error);\n      throw error;\n    }\n  },\n\n  searchFichas: async (params) => {\n    try {\n      const response = await api.get('/api/buscar/fichas', { params });\n      return response.data.fichas;\n    } catch (error) {\n      console.error('Error searching fichas médicas:', error);\n      throw error;\n    }\n  },\n\n  getQRCode: async (fichaId) => {\n    try {\n      // Esta URL devuelve directamente la imagen del QR\n      return `${api.defaults.baseURL}/api/qr/${fichaId}`;\n    } catch (error) {\n      console.error(`Error getting QR code for ficha ${fichaId}:`, error);\n      throw error;\n    }\n  },\n\n  uploadPhoto: async (fichaId, photoFile) => {\n    try {\n      const formData = new FormData();\n      formData.append('file', photoFile);\n      \n      const response = await axios.post(\n        `${api.defaults.baseURL}/api/upload_photo/${fichaId}`, \n        formData, \n        {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }\n      );\n      \n      return response.data;\n    } catch (error) {\n      console.error(`Error uploading photo for ficha ${fichaId}:`, error);\n      throw error;\n    }\n  }\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}