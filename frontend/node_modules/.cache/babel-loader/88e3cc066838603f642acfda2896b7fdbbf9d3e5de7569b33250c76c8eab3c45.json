{"ast":null,"code":"import axios from 'axios';\n\n// Create an axios instance with default config\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5002',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// API functions for different endpoints\nexport const ApiService = {\n  // Health check\n  checkHealth: async () => {\n    try {\n      const response = await api.get('/health');\n      return response.data;\n    } catch (error) {\n      console.error('Error checking API health:', error);\n      throw error;\n    }\n  },\n  // Get API status\n  getApiStatus: async () => {\n    try {\n      const response = await api.get('/');\n      return response.data;\n    } catch (error) {\n      console.error('Error getting API status:', error);\n      throw error;\n    }\n  },\n  // Motocicletas\n  getAllMotos: async () => {\n    try {\n      const response = await api.get('/api/motos');\n      return response.data.motos;\n    } catch (error) {\n      console.error('Error getting motocicletas:', error);\n      throw error;\n    }\n  },\n  getMotoById: async motoId => {\n    try {\n      const response = await api.get(`/api/motos/${motoId}`);\n      return response.data.moto;\n    } catch (error) {\n      console.error(`Error getting motocicleta ${motoId}:`, error);\n      throw error;\n    }\n  },\n  createMoto: async motoData => {\n    try {\n      const response = await api.post('/api/motos', motoData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating motocicleta:', error);\n      throw error;\n    }\n  },\n  updateMoto: async (motoId, motoData) => {\n    try {\n      const response = await api.put(`/api/motos/${motoId}`, motoData);\n      return response.data;\n    } catch (error) {\n      console.error(`Error updating motocicleta ${motoId}:`, error);\n      throw error;\n    }\n  },\n  deleteMoto: async motoId => {\n    try {\n      const response = await api.delete(`/api/motos/${motoId}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error deleting motocicleta ${motoId}:`, error);\n      throw error;\n    }\n  },\n  searchMotos: async params => {\n    try {\n      const response = await api.get('/api/buscar/motos', {\n        params\n      });\n      return response.data.motos;\n    } catch (error) {\n      console.error('Error searching motocicletas:', error);\n      throw error;\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","ApiService","checkHealth","response","get","data","error","console","getApiStatus","getAllMotos","motos","getMotoById","motoId","moto","createMoto","motoData","post","updateMoto","put","deleteMoto","delete","searchMotos","params"],"sources":["/home/omega/coursera/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create an axios instance with default config\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5002',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// API functions for different endpoints\nexport const ApiService = {\n  // Health check\n  checkHealth: async () => {\n    try {\n      const response = await api.get('/health');\n      return response.data;\n    } catch (error) {\n      console.error('Error checking API health:', error);\n      throw error;\n    }\n  },\n\n  // Get API status\n  getApiStatus: async () => {\n    try {\n      const response = await api.get('/');\n      return response.data;\n    } catch (error) {\n      console.error('Error getting API status:', error);\n      throw error;\n    }\n  },\n\n  // Motocicletas\n  getAllMotos: async () => {\n    try {\n      const response = await api.get('/api/motos');\n      return response.data.motos;\n    } catch (error) {\n      console.error('Error getting motocicletas:', error);\n      throw error;\n    }\n  },\n\n  getMotoById: async (motoId) => {\n    try {\n      const response = await api.get(`/api/motos/${motoId}`);\n      return response.data.moto;\n    } catch (error) {\n      console.error(`Error getting motocicleta ${motoId}:`, error);\n      throw error;\n    }\n  },\n\n  createMoto: async (motoData) => {\n    try {\n      const response = await api.post('/api/motos', motoData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating motocicleta:', error);\n      throw error;\n    }\n  },\n\n  updateMoto: async (motoId, motoData) => {\n    try {\n      const response = await api.put(`/api/motos/${motoId}`, motoData);\n      return response.data;\n    } catch (error) {\n      console.error(`Error updating motocicleta ${motoId}:`, error);\n      throw error;\n    }\n  },\n\n  deleteMoto: async (motoId) => {\n    try {\n      const response = await api.delete(`/api/motos/${motoId}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error deleting motocicleta ${motoId}:`, error);\n      throw error;\n    }\n  },\n\n  searchMotos: async (params) => {\n    try {\n      const response = await api.get('/api/buscar/motos', { params });\n      return response.data.motos;\n    } catch (error) {\n      console.error('Error searching motocicletas:', error);\n      throw error;\n    }\n  }\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}