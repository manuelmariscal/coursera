{"ast":null,"code":"var _jsxFileName = \"/home/omega/coursera/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is already logged in\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          // Set auth header for all future requests\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n          // Validate token and get user data\n          const response = await axios.get('/api/auth/me');\n          setCurrentUser(response.data);\n        }\n      } catch (error) {\n        // Clear invalid token\n        localStorage.removeItem('token');\n        delete axios.defaults.headers.common['Authorization'];\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkLoggedIn();\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post('/api/auth/login', {\n        username,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Save token to localStorage\n      localStorage.setItem('token', token);\n\n      // Set auth header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Update user state\n      setCurrentUser(user);\n      return true;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = () => {\n    // Remove token\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n\n    // Clear user state\n    setCurrentUser(null);\n  };\n  const isAdmin = () => {\n    return currentUser && currentUser.role === 'admin';\n  };\n\n  // Context value\n  const value = {\n    currentUser,\n    loading,\n    login,\n    logout,\n    isAdmin\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","checkLoggedIn","token","localStorage","getItem","defaults","headers","common","response","get","data","error","removeItem","login","username","password","post","user","setItem","logout","isAdmin","role","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/omega/coursera/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Create context\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is already logged in\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        \n        if (token) {\n          // Set auth header for all future requests\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n          \n          // Validate token and get user data\n          const response = await axios.get('/api/auth/me');\n          setCurrentUser(response.data);\n        }\n      } catch (error) {\n        // Clear invalid token\n        localStorage.removeItem('token');\n        delete axios.defaults.headers.common['Authorization'];\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    checkLoggedIn();\n  }, []);\n\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post('/api/auth/login', { username, password });\n      const { token, user } = response.data;\n      \n      // Save token to localStorage\n      localStorage.setItem('token', token);\n      \n      // Set auth header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      \n      // Update user state\n      setCurrentUser(user);\n      \n      return true;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    // Remove token\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n    \n    // Clear user state\n    setCurrentUser(null);\n  };\n\n  const isAdmin = () => {\n    return currentUser && currentUser.role === 'admin';\n  };\n\n  // Context value\n  const value = {\n    currentUser,\n    loading,\n    login,\n    logout,\n    isAdmin\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}